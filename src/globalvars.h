const char *mnemonics[] = {
	"nop", 
	"brk",
	"rt",
	"rts",
	"psh",
	"psl",
	"and",
	"sos",
	"sbe",
	"szc",
	"stc",
	"rsc",
	"lae",
	"xae",
	"inp",
	"eur",
	"cma",
	"xabu",
	"lab",
	"xab",
	"adcs",
	"xor",
	"add",
	"sam",
	"disb",
	"mvs",
	"out",
	"disn",
	"szm",
	"stm",
	"rsm",
	"szk",
	"szi",
	"rf1",
	"sf1",
	"rf2",
	"sf2",
	"tf1",
	"tf2",
	"xci",
	"xcd",
	"xc",
	"lam",
	"lbz",
	"lbf",
	"lbe",
	"lbep",
	"adis",
	"pp",
	"lai",
	"jms",
	"jmp",
	"\0"
};

const struct opcode_t opcodes[] = {
	{0b00000000, 0},
	{0b00000001, 0},
	{0b00000010, 0},
	{0b00000011, 0},
	{0b00000100, 0},
	{0b00000101, 0},
	{0b00000110, 0},
	{0b00000111, 0},
	{0b00001000, 0},
	{0b00001001, 0},
	{0b00001010, 0},
	{0b00001011, 0},
	{0b00001100, 0},
	{0b00001101, 0},
	{0b00001110, 0},
	{0b00001111, 0},
	{0b00010000, 0},
	{0b00010001, 0},
	{0b00010010, 0},
	{0b00010011, 0},
	{0b00010100, 0},
	{0b00010101, 0},
	{0b00010110, 0},
	{0b00010111, 0},
	{0b00011000, 0},
	{0b00011001, 0},
	{0b00011010, 0},
	{0b00011011, 0},
	{0b00011100, 0b11},
	{0b00100000, 0b11},
	{0b00100100, 0b11},
	{0b00101000, 0},
	{0b00101001, 0},
	{0b00101010, 0},
	{0b00101011, 0},
	{0b00101100, 0},
	{0b00101101, 0},
	{0b00101110, 0},
	{0b00101111, 0},
	{0b00110000, ~0b11},
	{0b00110100, ~0b11},
	{0b00111000, ~0b11},
	{0b00111100, ~0b11},
	{0b01000000, 0b11},
	{0b01000100, 0b11},
	{0b01001000, 0b11},
	{0b01001100, 0b11},
	{0b01010000, 0b1111},
	{0b01100000, ~0b1111},
	{0b01110000, 0b1111},
	{0b10000000, 0b111111},
	{0b11000000, 0b111111},
};

struct token_t tokens[1 << 16];
int t_len = 0;
struct symbol_t symbol_table[256];
int symbol_index = 0;

const enum type_t precedence_array[][4] = {
    {STAR, SLASH, REMAINDER, END},
    {PLUS, MINUS, END},
    {LEFT_SHIFT, RIGHT_SHIFT, END},
    {AND, END},
    {XOR, END},
    {OR, END}
};
#define PA_LEN (int)(sizeof(precedence_array) / sizeof(precedence_array[0]))
